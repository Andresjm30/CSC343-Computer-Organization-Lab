$comment
	File created using the following command:
		vcd file mejia_addersubtractor2_Nov8.msim.vcd -direction
$end
$date
	Tue Nov 10 22:56:13 2020
$end
$version
	ModelSim Version 10.5b
$end
$timescale
	1ps
$end

$scope module mejia_addersubtractor2_nov8_vhd_vec_tst $end
$var wire 1 ! A [31] $end
$var wire 1 " A [30] $end
$var wire 1 # A [29] $end
$var wire 1 $ A [28] $end
$var wire 1 % A [27] $end
$var wire 1 & A [26] $end
$var wire 1 ' A [25] $end
$var wire 1 ( A [24] $end
$var wire 1 ) A [23] $end
$var wire 1 * A [22] $end
$var wire 1 + A [21] $end
$var wire 1 , A [20] $end
$var wire 1 - A [19] $end
$var wire 1 . A [18] $end
$var wire 1 / A [17] $end
$var wire 1 0 A [16] $end
$var wire 1 1 A [15] $end
$var wire 1 2 A [14] $end
$var wire 1 3 A [13] $end
$var wire 1 4 A [12] $end
$var wire 1 5 A [11] $end
$var wire 1 6 A [10] $end
$var wire 1 7 A [9] $end
$var wire 1 8 A [8] $end
$var wire 1 9 A [7] $end
$var wire 1 : A [6] $end
$var wire 1 ; A [5] $end
$var wire 1 < A [4] $end
$var wire 1 = A [3] $end
$var wire 1 > A [2] $end
$var wire 1 ? A [1] $end
$var wire 1 @ A [0] $end
$var wire 1 A AddSub $end
$var wire 1 B B [31] $end
$var wire 1 C B [30] $end
$var wire 1 D B [29] $end
$var wire 1 E B [28] $end
$var wire 1 F B [27] $end
$var wire 1 G B [26] $end
$var wire 1 H B [25] $end
$var wire 1 I B [24] $end
$var wire 1 J B [23] $end
$var wire 1 K B [22] $end
$var wire 1 L B [21] $end
$var wire 1 M B [20] $end
$var wire 1 N B [19] $end
$var wire 1 O B [18] $end
$var wire 1 P B [17] $end
$var wire 1 Q B [16] $end
$var wire 1 R B [15] $end
$var wire 1 S B [14] $end
$var wire 1 T B [13] $end
$var wire 1 U B [12] $end
$var wire 1 V B [11] $end
$var wire 1 W B [10] $end
$var wire 1 X B [9] $end
$var wire 1 Y B [8] $end
$var wire 1 Z B [7] $end
$var wire 1 [ B [6] $end
$var wire 1 \ B [5] $end
$var wire 1 ] B [4] $end
$var wire 1 ^ B [3] $end
$var wire 1 _ B [2] $end
$var wire 1 ` B [1] $end
$var wire 1 a B [0] $end
$var wire 1 b Clock $end
$var wire 1 c neg $end
$var wire 1 d Overflow $end
$var wire 1 e Reset $end
$var wire 1 f Sel $end
$var wire 1 g Z [31] $end
$var wire 1 h Z [30] $end
$var wire 1 i Z [29] $end
$var wire 1 j Z [28] $end
$var wire 1 k Z [27] $end
$var wire 1 l Z [26] $end
$var wire 1 m Z [25] $end
$var wire 1 n Z [24] $end
$var wire 1 o Z [23] $end
$var wire 1 p Z [22] $end
$var wire 1 q Z [21] $end
$var wire 1 r Z [20] $end
$var wire 1 s Z [19] $end
$var wire 1 t Z [18] $end
$var wire 1 u Z [17] $end
$var wire 1 v Z [16] $end
$var wire 1 w Z [15] $end
$var wire 1 x Z [14] $end
$var wire 1 y Z [13] $end
$var wire 1 z Z [12] $end
$var wire 1 { Z [11] $end
$var wire 1 | Z [10] $end
$var wire 1 } Z [9] $end
$var wire 1 ~ Z [8] $end
$var wire 1 !! Z [7] $end
$var wire 1 "! Z [6] $end
$var wire 1 #! Z [5] $end
$var wire 1 $! Z [4] $end
$var wire 1 %! Z [3] $end
$var wire 1 &! Z [2] $end
$var wire 1 '! Z [1] $end
$var wire 1 (! Z [0] $end
$var wire 1 )! zero $end

$scope module i1 $end
$var wire 1 *! gnd $end
$var wire 1 +! vcc $end
$var wire 1 ,! unknown $end
$var wire 1 -! devoe $end
$var wire 1 .! devclrn $end
$var wire 1 /! devpor $end
$var wire 1 0! ww_devoe $end
$var wire 1 1! ww_devclrn $end
$var wire 1 2! ww_devpor $end
$var wire 1 3! ww_A [31] $end
$var wire 1 4! ww_A [30] $end
$var wire 1 5! ww_A [29] $end
$var wire 1 6! ww_A [28] $end
$var wire 1 7! ww_A [27] $end
$var wire 1 8! ww_A [26] $end
$var wire 1 9! ww_A [25] $end
$var wire 1 :! ww_A [24] $end
$var wire 1 ;! ww_A [23] $end
$var wire 1 <! ww_A [22] $end
$var wire 1 =! ww_A [21] $end
$var wire 1 >! ww_A [20] $end
$var wire 1 ?! ww_A [19] $end
$var wire 1 @! ww_A [18] $end
$var wire 1 A! ww_A [17] $end
$var wire 1 B! ww_A [16] $end
$var wire 1 C! ww_A [15] $end
$var wire 1 D! ww_A [14] $end
$var wire 1 E! ww_A [13] $end
$var wire 1 F! ww_A [12] $end
$var wire 1 G! ww_A [11] $end
$var wire 1 H! ww_A [10] $end
$var wire 1 I! ww_A [9] $end
$var wire 1 J! ww_A [8] $end
$var wire 1 K! ww_A [7] $end
$var wire 1 L! ww_A [6] $end
$var wire 1 M! ww_A [5] $end
$var wire 1 N! ww_A [4] $end
$var wire 1 O! ww_A [3] $end
$var wire 1 P! ww_A [2] $end
$var wire 1 Q! ww_A [1] $end
$var wire 1 R! ww_A [0] $end
$var wire 1 S! ww_B [31] $end
$var wire 1 T! ww_B [30] $end
$var wire 1 U! ww_B [29] $end
$var wire 1 V! ww_B [28] $end
$var wire 1 W! ww_B [27] $end
$var wire 1 X! ww_B [26] $end
$var wire 1 Y! ww_B [25] $end
$var wire 1 Z! ww_B [24] $end
$var wire 1 [! ww_B [23] $end
$var wire 1 \! ww_B [22] $end
$var wire 1 ]! ww_B [21] $end
$var wire 1 ^! ww_B [20] $end
$var wire 1 _! ww_B [19] $end
$var wire 1 `! ww_B [18] $end
$var wire 1 a! ww_B [17] $end
$var wire 1 b! ww_B [16] $end
$var wire 1 c! ww_B [15] $end
$var wire 1 d! ww_B [14] $end
$var wire 1 e! ww_B [13] $end
$var wire 1 f! ww_B [12] $end
$var wire 1 g! ww_B [11] $end
$var wire 1 h! ww_B [10] $end
$var wire 1 i! ww_B [9] $end
$var wire 1 j! ww_B [8] $end
$var wire 1 k! ww_B [7] $end
$var wire 1 l! ww_B [6] $end
$var wire 1 m! ww_B [5] $end
$var wire 1 n! ww_B [4] $end
$var wire 1 o! ww_B [3] $end
$var wire 1 p! ww_B [2] $end
$var wire 1 q! ww_B [1] $end
$var wire 1 r! ww_B [0] $end
$var wire 1 s! ww_Clock $end
$var wire 1 t! ww_Reset $end
$var wire 1 u! ww_Sel $end
$var wire 1 v! ww_AddSub $end
$var wire 1 w! ww_Z [31] $end
$var wire 1 x! ww_Z [30] $end
$var wire 1 y! ww_Z [29] $end
$var wire 1 z! ww_Z [28] $end
$var wire 1 {! ww_Z [27] $end
$var wire 1 |! ww_Z [26] $end
$var wire 1 }! ww_Z [25] $end
$var wire 1 ~! ww_Z [24] $end
$var wire 1 !" ww_Z [23] $end
$var wire 1 "" ww_Z [22] $end
$var wire 1 #" ww_Z [21] $end
$var wire 1 $" ww_Z [20] $end
$var wire 1 %" ww_Z [19] $end
$var wire 1 &" ww_Z [18] $end
$var wire 1 '" ww_Z [17] $end
$var wire 1 (" ww_Z [16] $end
$var wire 1 )" ww_Z [15] $end
$var wire 1 *" ww_Z [14] $end
$var wire 1 +" ww_Z [13] $end
$var wire 1 ," ww_Z [12] $end
$var wire 1 -" ww_Z [11] $end
$var wire 1 ." ww_Z [10] $end
$var wire 1 /" ww_Z [9] $end
$var wire 1 0" ww_Z [8] $end
$var wire 1 1" ww_Z [7] $end
$var wire 1 2" ww_Z [6] $end
$var wire 1 3" ww_Z [5] $end
$var wire 1 4" ww_Z [4] $end
$var wire 1 5" ww_Z [3] $end
$var wire 1 6" ww_Z [2] $end
$var wire 1 7" ww_Z [1] $end
$var wire 1 8" ww_Z [0] $end
$var wire 1 9" ww_Overflow $end
$var wire 1 :" ww_zero $end
$var wire 1 ;" ww_neg $end
$var wire 1 <" \~QUARTUS_CREATED_GND~I_combout\ $end
$var wire 1 =" \Clock~input_o\ $end
$var wire 1 >" \Clock~inputCLKENA0_outclk\ $end
$var wire 1 ?" \AddSub~input_o\ $end
$var wire 1 @" \AddSubR~0_combout\ $end
$var wire 1 A" \Reset~input_o\ $end
$var wire 1 B" \AddSubR~q\ $end
$var wire 1 C" \B[0]~input_o\ $end
$var wire 1 D" \A[0]~input_o\ $end
$var wire 1 E" \Zreg[0]~DUPLICATE_q\ $end
$var wire 1 F" \Sel~input_o\ $end
$var wire 1 G" \SelR~q\ $end
$var wire 1 H" \multiplexer|F[0]~1_combout\ $end
$var wire 1 I" \nbit_addsub|LPM_ADD_SUB_component|auto_generated|add_sub_cella[0]~2_cout\ $end
$var wire 1 J" \B[1]~input_o\ $end
$var wire 1 K" \A[1]~input_o\ $end
$var wire 1 L" \Areg[1]~feeder_combout\ $end
$var wire 1 M" \multiplexer|F[1]~2_combout\ $end
$var wire 1 N" \nbit_addsub|LPM_ADD_SUB_component|auto_generated|add_sub_cella[0]~COUT\ $end
$var wire 1 O" \A[2]~input_o\ $end
$var wire 1 P" \Zreg[2]~DUPLICATE_q\ $end
$var wire 1 Q" \multiplexer|F[2]~3_combout\ $end
$var wire 1 R" \B[2]~input_o\ $end
$var wire 1 S" \nbit_addsub|LPM_ADD_SUB_component|auto_generated|add_sub_cella[1]~COUT\ $end
$var wire 1 T" \B[3]~input_o\ $end
$var wire 1 U" \Zreg[3]~DUPLICATE_q\ $end
$var wire 1 V" \A[3]~input_o\ $end
$var wire 1 W" \multiplexer|F[3]~4_combout\ $end
$var wire 1 X" \nbit_addsub|LPM_ADD_SUB_component|auto_generated|add_sub_cella[2]~COUT\ $end
$var wire 1 Y" \B[4]~input_o\ $end
$var wire 1 Z" \Breg[4]~feeder_combout\ $end
$var wire 1 [" \A[4]~input_o\ $end
$var wire 1 \" \multiplexer|F[4]~5_combout\ $end
$var wire 1 ]" \nbit_addsub|LPM_ADD_SUB_component|auto_generated|add_sub_cella[3]~COUT\ $end
$var wire 1 ^" \A[5]~input_o\ $end
$var wire 1 _" \multiplexer|F[5]~6_combout\ $end
$var wire 1 `" \B[5]~input_o\ $end
$var wire 1 a" \Breg[5]~feeder_combout\ $end
$var wire 1 b" \nbit_addsub|LPM_ADD_SUB_component|auto_generated|add_sub_cella[4]~COUT\ $end
$var wire 1 c" \B[6]~input_o\ $end
$var wire 1 d" \Breg[6]~feeder_combout\ $end
$var wire 1 e" \A[6]~input_o\ $end
$var wire 1 f" \Areg[6]~feeder_combout\ $end
$var wire 1 g" \multiplexer|F[6]~7_combout\ $end
$var wire 1 h" \nbit_addsub|LPM_ADD_SUB_component|auto_generated|add_sub_cella[5]~COUT\ $end
$var wire 1 i" \B[7]~input_o\ $end
$var wire 1 j" \A[7]~input_o\ $end
$var wire 1 k" \multiplexer|F[7]~8_combout\ $end
$var wire 1 l" \nbit_addsub|LPM_ADD_SUB_component|auto_generated|add_sub_cella[6]~COUT\ $end
$var wire 1 m" \B[8]~input_o\ $end
$var wire 1 n" \A[8]~input_o\ $end
$var wire 1 o" \Areg[8]~feeder_combout\ $end
$var wire 1 p" \multiplexer|F[8]~9_combout\ $end
$var wire 1 q" \nbit_addsub|LPM_ADD_SUB_component|auto_generated|add_sub_cella[7]~COUT\ $end
$var wire 1 r" \A[9]~input_o\ $end
$var wire 1 s" \multiplexer|F[9]~10_combout\ $end
$var wire 1 t" \B[9]~input_o\ $end
$var wire 1 u" \Breg[9]~feeder_combout\ $end
$var wire 1 v" \nbit_addsub|LPM_ADD_SUB_component|auto_generated|add_sub_cella[8]~COUT\ $end
$var wire 1 w" \A[10]~input_o\ $end
$var wire 1 x" \multiplexer|F[10]~11_combout\ $end
$var wire 1 y" \B[10]~input_o\ $end
$var wire 1 z" \nbit_addsub|LPM_ADD_SUB_component|auto_generated|add_sub_cella[9]~COUT\ $end
$var wire 1 {" \A[11]~input_o\ $end
$var wire 1 |" \multiplexer|F[11]~12_combout\ $end
$var wire 1 }" \B[11]~input_o\ $end
$var wire 1 ~" \Breg[11]~feeder_combout\ $end
$var wire 1 !# \nbit_addsub|LPM_ADD_SUB_component|auto_generated|add_sub_cella[10]~COUT\ $end
$var wire 1 "# \B[12]~input_o\ $end
$var wire 1 ## \A[12]~input_o\ $end
$var wire 1 $# \multiplexer|F[12]~13_combout\ $end
$var wire 1 %# \nbit_addsub|LPM_ADD_SUB_component|auto_generated|add_sub_cella[11]~COUT\ $end
$var wire 1 &# \Zreg[12]~DUPLICATE_q\ $end
$var wire 1 '# \B[13]~input_o\ $end
$var wire 1 (# \A[13]~input_o\ $end
$var wire 1 )# \multiplexer|F[13]~14_combout\ $end
$var wire 1 *# \nbit_addsub|LPM_ADD_SUB_component|auto_generated|add_sub_cella[12]~COUT\ $end
$var wire 1 +# \B[14]~input_o\ $end
$var wire 1 ,# \A[14]~input_o\ $end
$var wire 1 -# \multiplexer|F[14]~15_combout\ $end
$var wire 1 .# \nbit_addsub|LPM_ADD_SUB_component|auto_generated|add_sub_cella[13]~COUT\ $end
$var wire 1 /# \Zreg[14]~feeder_combout\ $end
$var wire 1 0# \B[15]~input_o\ $end
$var wire 1 1# \Breg[15]~feeder_combout\ $end
$var wire 1 2# \A[15]~input_o\ $end
$var wire 1 3# \Zreg[15]~DUPLICATE_q\ $end
$var wire 1 4# \multiplexer|F[15]~16_combout\ $end
$var wire 1 5# \nbit_addsub|LPM_ADD_SUB_component|auto_generated|add_sub_cella[14]~COUT\ $end
$var wire 1 6# \Zreg[15]~feeder_combout\ $end
$var wire 1 7# \A[16]~input_o\ $end
$var wire 1 8# \multiplexer|F[16]~17_combout\ $end
$var wire 1 9# \B[16]~input_o\ $end
$var wire 1 :# \nbit_addsub|LPM_ADD_SUB_component|auto_generated|add_sub_cella[15]~COUT\ $end
$var wire 1 ;# \A[17]~input_o\ $end
$var wire 1 <# \multiplexer|F[17]~18_combout\ $end
$var wire 1 =# \B[17]~input_o\ $end
$var wire 1 ># \nbit_addsub|LPM_ADD_SUB_component|auto_generated|add_sub_cella[16]~COUT\ $end
$var wire 1 ?# \Zreg[17]~feeder_combout\ $end
$var wire 1 @# \A[18]~input_o\ $end
$var wire 1 A# \Areg[18]~feeder_combout\ $end
$var wire 1 B# \multiplexer|F[18]~19_combout\ $end
$var wire 1 C# \B[18]~input_o\ $end
$var wire 1 D# \nbit_addsub|LPM_ADD_SUB_component|auto_generated|add_sub_cella[17]~COUT\ $end
$var wire 1 E# \B[19]~input_o\ $end
$var wire 1 F# \A[19]~input_o\ $end
$var wire 1 G# \multiplexer|F[19]~20_combout\ $end
$var wire 1 H# \nbit_addsub|LPM_ADD_SUB_component|auto_generated|add_sub_cella[18]~COUT\ $end
$var wire 1 I# \B[20]~input_o\ $end
$var wire 1 J# \A[20]~input_o\ $end
$var wire 1 K# \multiplexer|F[20]~21_combout\ $end
$var wire 1 L# \nbit_addsub|LPM_ADD_SUB_component|auto_generated|add_sub_cella[19]~COUT\ $end
$var wire 1 M# \B[21]~input_o\ $end
$var wire 1 N# \A[21]~input_o\ $end
$var wire 1 O# \multiplexer|F[21]~22_combout\ $end
$var wire 1 P# \nbit_addsub|LPM_ADD_SUB_component|auto_generated|add_sub_cella[20]~COUT\ $end
$var wire 1 Q# \B[22]~input_o\ $end
$var wire 1 R# \A[22]~input_o\ $end
$var wire 1 S# \multiplexer|F[22]~23_combout\ $end
$var wire 1 T# \nbit_addsub|LPM_ADD_SUB_component|auto_generated|add_sub_cella[21]~COUT\ $end
$var wire 1 U# \A[23]~input_o\ $end
$var wire 1 V# \multiplexer|F[23]~24_combout\ $end
$var wire 1 W# \B[23]~input_o\ $end
$var wire 1 X# \nbit_addsub|LPM_ADD_SUB_component|auto_generated|add_sub_cella[22]~COUT\ $end
$var wire 1 Y# \B[24]~input_o\ $end
$var wire 1 Z# \A[24]~input_o\ $end
$var wire 1 [# \multiplexer|F[24]~25_combout\ $end
$var wire 1 \# \nbit_addsub|LPM_ADD_SUB_component|auto_generated|add_sub_cella[23]~COUT\ $end
$var wire 1 ]# \A[25]~input_o\ $end
$var wire 1 ^# \multiplexer|F[25]~26_combout\ $end
$var wire 1 _# \B[25]~input_o\ $end
$var wire 1 `# \nbit_addsub|LPM_ADD_SUB_component|auto_generated|add_sub_cella[24]~COUT\ $end
$var wire 1 a# \A[26]~input_o\ $end
$var wire 1 b# \multiplexer|F[26]~27_combout\ $end
$var wire 1 c# \B[26]~input_o\ $end
$var wire 1 d# \nbit_addsub|LPM_ADD_SUB_component|auto_generated|add_sub_cella[25]~COUT\ $end
$var wire 1 e# \A[27]~input_o\ $end
$var wire 1 f# \multiplexer|F[27]~28_combout\ $end
$var wire 1 g# \B[27]~input_o\ $end
$var wire 1 h# \nbit_addsub|LPM_ADD_SUB_component|auto_generated|add_sub_cella[26]~COUT\ $end
$var wire 1 i# \A[28]~input_o\ $end
$var wire 1 j# \multiplexer|F[28]~29_combout\ $end
$var wire 1 k# \B[28]~input_o\ $end
$var wire 1 l# \nbit_addsub|LPM_ADD_SUB_component|auto_generated|add_sub_cella[27]~COUT\ $end
$var wire 1 m# \B[29]~input_o\ $end
$var wire 1 n# \A[29]~input_o\ $end
$var wire 1 o# \multiplexer|F[29]~30_combout\ $end
$var wire 1 p# \nbit_addsub|LPM_ADD_SUB_component|auto_generated|add_sub_cella[28]~COUT\ $end
$var wire 1 q# \B[30]~input_o\ $end
$var wire 1 r# \Breg[30]~feeder_combout\ $end
$var wire 1 s# \A[30]~input_o\ $end
$var wire 1 t# \multiplexer|F[30]~31_combout\ $end
$var wire 1 u# \nbit_addsub|LPM_ADD_SUB_component|auto_generated|add_sub_cella[29]~COUT\ $end
$var wire 1 v# \A[31]~input_o\ $end
$var wire 1 w# \multiplexer|F[31]~0_combout\ $end
$var wire 1 x# \B[31]~input_o\ $end
$var wire 1 y# \Breg[31]~feeder_combout\ $end
$var wire 1 z# \nbit_addsub|LPM_ADD_SUB_component|auto_generated|add_sub_cella[30]~COUT\ $end
$var wire 1 {# \Overflow~reg0_q\ $end
$var wire 1 |# \Equal0~0_combout\ $end
$var wire 1 }# \Equal0~6_combout\ $end
$var wire 1 ~# \Equal0~1_combout\ $end
$var wire 1 !$ \Equal0~4_combout\ $end
$var wire 1 "$ \Equal0~5_combout\ $end
$var wire 1 #$ \Equal0~2_combout\ $end
$var wire 1 $$ \Equal0~3_combout\ $end
$var wire 1 %$ \zero~reg0_q\ $end
$var wire 1 &$ \neg~reg0_q\ $end
$var wire 1 '$ \nbit_addsub|LPM_ADD_SUB_component|auto_generated|result\ [31] $end
$var wire 1 ($ \nbit_addsub|LPM_ADD_SUB_component|auto_generated|result\ [30] $end
$var wire 1 )$ \nbit_addsub|LPM_ADD_SUB_component|auto_generated|result\ [29] $end
$var wire 1 *$ \nbit_addsub|LPM_ADD_SUB_component|auto_generated|result\ [28] $end
$var wire 1 +$ \nbit_addsub|LPM_ADD_SUB_component|auto_generated|result\ [27] $end
$var wire 1 ,$ \nbit_addsub|LPM_ADD_SUB_component|auto_generated|result\ [26] $end
$var wire 1 -$ \nbit_addsub|LPM_ADD_SUB_component|auto_generated|result\ [25] $end
$var wire 1 .$ \nbit_addsub|LPM_ADD_SUB_component|auto_generated|result\ [24] $end
$var wire 1 /$ \nbit_addsub|LPM_ADD_SUB_component|auto_generated|result\ [23] $end
$var wire 1 0$ \nbit_addsub|LPM_ADD_SUB_component|auto_generated|result\ [22] $end
$var wire 1 1$ \nbit_addsub|LPM_ADD_SUB_component|auto_generated|result\ [21] $end
$var wire 1 2$ \nbit_addsub|LPM_ADD_SUB_component|auto_generated|result\ [20] $end
$var wire 1 3$ \nbit_addsub|LPM_ADD_SUB_component|auto_generated|result\ [19] $end
$var wire 1 4$ \nbit_addsub|LPM_ADD_SUB_component|auto_generated|result\ [18] $end
$var wire 1 5$ \nbit_addsub|LPM_ADD_SUB_component|auto_generated|result\ [17] $end
$var wire 1 6$ \nbit_addsub|LPM_ADD_SUB_component|auto_generated|result\ [16] $end
$var wire 1 7$ \nbit_addsub|LPM_ADD_SUB_component|auto_generated|result\ [15] $end
$var wire 1 8$ \nbit_addsub|LPM_ADD_SUB_component|auto_generated|result\ [14] $end
$var wire 1 9$ \nbit_addsub|LPM_ADD_SUB_component|auto_generated|result\ [13] $end
$var wire 1 :$ \nbit_addsub|LPM_ADD_SUB_component|auto_generated|result\ [12] $end
$var wire 1 ;$ \nbit_addsub|LPM_ADD_SUB_component|auto_generated|result\ [11] $end
$var wire 1 <$ \nbit_addsub|LPM_ADD_SUB_component|auto_generated|result\ [10] $end
$var wire 1 =$ \nbit_addsub|LPM_ADD_SUB_component|auto_generated|result\ [9] $end
$var wire 1 >$ \nbit_addsub|LPM_ADD_SUB_component|auto_generated|result\ [8] $end
$var wire 1 ?$ \nbit_addsub|LPM_ADD_SUB_component|auto_generated|result\ [7] $end
$var wire 1 @$ \nbit_addsub|LPM_ADD_SUB_component|auto_generated|result\ [6] $end
$var wire 1 A$ \nbit_addsub|LPM_ADD_SUB_component|auto_generated|result\ [5] $end
$var wire 1 B$ \nbit_addsub|LPM_ADD_SUB_component|auto_generated|result\ [4] $end
$var wire 1 C$ \nbit_addsub|LPM_ADD_SUB_component|auto_generated|result\ [3] $end
$var wire 1 D$ \nbit_addsub|LPM_ADD_SUB_component|auto_generated|result\ [2] $end
$var wire 1 E$ \nbit_addsub|LPM_ADD_SUB_component|auto_generated|result\ [1] $end
$var wire 1 F$ \nbit_addsub|LPM_ADD_SUB_component|auto_generated|result\ [0] $end
$var wire 1 G$ Zreg [31] $end
$var wire 1 H$ Zreg [30] $end
$var wire 1 I$ Zreg [29] $end
$var wire 1 J$ Zreg [28] $end
$var wire 1 K$ Zreg [27] $end
$var wire 1 L$ Zreg [26] $end
$var wire 1 M$ Zreg [25] $end
$var wire 1 N$ Zreg [24] $end
$var wire 1 O$ Zreg [23] $end
$var wire 1 P$ Zreg [22] $end
$var wire 1 Q$ Zreg [21] $end
$var wire 1 R$ Zreg [20] $end
$var wire 1 S$ Zreg [19] $end
$var wire 1 T$ Zreg [18] $end
$var wire 1 U$ Zreg [17] $end
$var wire 1 V$ Zreg [16] $end
$var wire 1 W$ Zreg [15] $end
$var wire 1 X$ Zreg [14] $end
$var wire 1 Y$ Zreg [13] $end
$var wire 1 Z$ Zreg [12] $end
$var wire 1 [$ Zreg [11] $end
$var wire 1 \$ Zreg [10] $end
$var wire 1 ]$ Zreg [9] $end
$var wire 1 ^$ Zreg [8] $end
$var wire 1 _$ Zreg [7] $end
$var wire 1 `$ Zreg [6] $end
$var wire 1 a$ Zreg [5] $end
$var wire 1 b$ Zreg [4] $end
$var wire 1 c$ Zreg [3] $end
$var wire 1 d$ Zreg [2] $end
$var wire 1 e$ Zreg [1] $end
$var wire 1 f$ Zreg [0] $end
$var wire 1 g$ Areg [31] $end
$var wire 1 h$ Areg [30] $end
$var wire 1 i$ Areg [29] $end
$var wire 1 j$ Areg [28] $end
$var wire 1 k$ Areg [27] $end
$var wire 1 l$ Areg [26] $end
$var wire 1 m$ Areg [25] $end
$var wire 1 n$ Areg [24] $end
$var wire 1 o$ Areg [23] $end
$var wire 1 p$ Areg [22] $end
$var wire 1 q$ Areg [21] $end
$var wire 1 r$ Areg [20] $end
$var wire 1 s$ Areg [19] $end
$var wire 1 t$ Areg [18] $end
$var wire 1 u$ Areg [17] $end
$var wire 1 v$ Areg [16] $end
$var wire 1 w$ Areg [15] $end
$var wire 1 x$ Areg [14] $end
$var wire 1 y$ Areg [13] $end
$var wire 1 z$ Areg [12] $end
$var wire 1 {$ Areg [11] $end
$var wire 1 |$ Areg [10] $end
$var wire 1 }$ Areg [9] $end
$var wire 1 ~$ Areg [8] $end
$var wire 1 !% Areg [7] $end
$var wire 1 "% Areg [6] $end
$var wire 1 #% Areg [5] $end
$var wire 1 $% Areg [4] $end
$var wire 1 %% Areg [3] $end
$var wire 1 &% Areg [2] $end
$var wire 1 '% Areg [1] $end
$var wire 1 (% Areg [0] $end
$var wire 1 )% Breg [31] $end
$var wire 1 *% Breg [30] $end
$var wire 1 +% Breg [29] $end
$var wire 1 ,% Breg [28] $end
$var wire 1 -% Breg [27] $end
$var wire 1 .% Breg [26] $end
$var wire 1 /% Breg [25] $end
$var wire 1 0% Breg [24] $end
$var wire 1 1% Breg [23] $end
$var wire 1 2% Breg [22] $end
$var wire 1 3% Breg [21] $end
$var wire 1 4% Breg [20] $end
$var wire 1 5% Breg [19] $end
$var wire 1 6% Breg [18] $end
$var wire 1 7% Breg [17] $end
$var wire 1 8% Breg [16] $end
$var wire 1 9% Breg [15] $end
$var wire 1 :% Breg [14] $end
$var wire 1 ;% Breg [13] $end
$var wire 1 <% Breg [12] $end
$var wire 1 =% Breg [11] $end
$var wire 1 >% Breg [10] $end
$var wire 1 ?% Breg [9] $end
$var wire 1 @% Breg [8] $end
$var wire 1 A% Breg [7] $end
$var wire 1 B% Breg [6] $end
$var wire 1 C% Breg [5] $end
$var wire 1 D% Breg [4] $end
$var wire 1 E% Breg [3] $end
$var wire 1 F% Breg [2] $end
$var wire 1 G% Breg [1] $end
$var wire 1 H% Breg [0] $end
$var wire 1 I% \nbit_addsub|LPM_ADD_SUB_component|auto_generated|overflow_wire\ [0] $end
$var wire 1 J% ALT_INV_Zreg [31] $end
$var wire 1 K% ALT_INV_Zreg [30] $end
$var wire 1 L% ALT_INV_Zreg [29] $end
$var wire 1 M% ALT_INV_Zreg [28] $end
$var wire 1 N% ALT_INV_Zreg [27] $end
$var wire 1 O% ALT_INV_Zreg [26] $end
$var wire 1 P% ALT_INV_Zreg [25] $end
$var wire 1 Q% ALT_INV_Zreg [24] $end
$var wire 1 R% ALT_INV_Zreg [23] $end
$var wire 1 S% ALT_INV_Zreg [22] $end
$var wire 1 T% ALT_INV_Zreg [21] $end
$var wire 1 U% ALT_INV_Zreg [20] $end
$var wire 1 V% ALT_INV_Zreg [19] $end
$var wire 1 W% ALT_INV_Zreg [18] $end
$var wire 1 X% ALT_INV_Zreg [17] $end
$var wire 1 Y% ALT_INV_Zreg [16] $end
$var wire 1 Z% ALT_INV_Zreg [15] $end
$var wire 1 [% ALT_INV_Zreg [14] $end
$var wire 1 \% ALT_INV_Zreg [13] $end
$var wire 1 ]% ALT_INV_Zreg [12] $end
$var wire 1 ^% ALT_INV_Zreg [11] $end
$var wire 1 _% ALT_INV_Zreg [10] $end
$var wire 1 `% ALT_INV_Zreg [9] $end
$var wire 1 a% ALT_INV_Zreg [8] $end
$var wire 1 b% ALT_INV_Zreg [7] $end
$var wire 1 c% ALT_INV_Zreg [6] $end
$var wire 1 d% ALT_INV_Zreg [5] $end
$var wire 1 e% ALT_INV_Zreg [4] $end
$var wire 1 f% ALT_INV_Zreg [3] $end
$var wire 1 g% ALT_INV_Zreg [2] $end
$var wire 1 h% ALT_INV_Zreg [1] $end
$var wire 1 i% \nbit_addsub|LPM_ADD_SUB_component|auto_generated|ALT_INV_result\ [31] $end
$var wire 1 j% \nbit_addsub|LPM_ADD_SUB_component|auto_generated|ALT_INV_result\ [30] $end
$var wire 1 k% \nbit_addsub|LPM_ADD_SUB_component|auto_generated|ALT_INV_result\ [29] $end
$var wire 1 l% \nbit_addsub|LPM_ADD_SUB_component|auto_generated|ALT_INV_result\ [28] $end
$var wire 1 m% \nbit_addsub|LPM_ADD_SUB_component|auto_generated|ALT_INV_result\ [27] $end
$var wire 1 n% \nbit_addsub|LPM_ADD_SUB_component|auto_generated|ALT_INV_result\ [26] $end
$var wire 1 o% \nbit_addsub|LPM_ADD_SUB_component|auto_generated|ALT_INV_result\ [25] $end
$var wire 1 p% \nbit_addsub|LPM_ADD_SUB_component|auto_generated|ALT_INV_result\ [24] $end
$var wire 1 q% \nbit_addsub|LPM_ADD_SUB_component|auto_generated|ALT_INV_result\ [23] $end
$var wire 1 r% \nbit_addsub|LPM_ADD_SUB_component|auto_generated|ALT_INV_result\ [22] $end
$var wire 1 s% \nbit_addsub|LPM_ADD_SUB_component|auto_generated|ALT_INV_result\ [21] $end
$var wire 1 t% \nbit_addsub|LPM_ADD_SUB_component|auto_generated|ALT_INV_result\ [20] $end
$var wire 1 u% \nbit_addsub|LPM_ADD_SUB_component|auto_generated|ALT_INV_result\ [19] $end
$var wire 1 v% \nbit_addsub|LPM_ADD_SUB_component|auto_generated|ALT_INV_result\ [18] $end
$var wire 1 w% \nbit_addsub|LPM_ADD_SUB_component|auto_generated|ALT_INV_result\ [17] $end
$var wire 1 x% \nbit_addsub|LPM_ADD_SUB_component|auto_generated|ALT_INV_result\ [16] $end
$var wire 1 y% \nbit_addsub|LPM_ADD_SUB_component|auto_generated|ALT_INV_result\ [15] $end
$var wire 1 z% \nbit_addsub|LPM_ADD_SUB_component|auto_generated|ALT_INV_result\ [14] $end
$var wire 1 {% \nbit_addsub|LPM_ADD_SUB_component|auto_generated|ALT_INV_result\ [13] $end
$var wire 1 |% \nbit_addsub|LPM_ADD_SUB_component|auto_generated|ALT_INV_result\ [12] $end
$var wire 1 }% \nbit_addsub|LPM_ADD_SUB_component|auto_generated|ALT_INV_result\ [11] $end
$var wire 1 ~% \nbit_addsub|LPM_ADD_SUB_component|auto_generated|ALT_INV_result\ [10] $end
$var wire 1 !& \nbit_addsub|LPM_ADD_SUB_component|auto_generated|ALT_INV_result\ [9] $end
$var wire 1 "& \nbit_addsub|LPM_ADD_SUB_component|auto_generated|ALT_INV_result\ [8] $end
$var wire 1 #& \nbit_addsub|LPM_ADD_SUB_component|auto_generated|ALT_INV_result\ [7] $end
$var wire 1 $& \nbit_addsub|LPM_ADD_SUB_component|auto_generated|ALT_INV_result\ [6] $end
$var wire 1 %& \nbit_addsub|LPM_ADD_SUB_component|auto_generated|ALT_INV_result\ [5] $end
$var wire 1 && \nbit_addsub|LPM_ADD_SUB_component|auto_generated|ALT_INV_result\ [4] $end
$var wire 1 '& \nbit_addsub|LPM_ADD_SUB_component|auto_generated|ALT_INV_result\ [3] $end
$var wire 1 (& \nbit_addsub|LPM_ADD_SUB_component|auto_generated|ALT_INV_result\ [2] $end
$var wire 1 )& \nbit_addsub|LPM_ADD_SUB_component|auto_generated|ALT_INV_result\ [1] $end
$var wire 1 *& \nbit_addsub|LPM_ADD_SUB_component|auto_generated|ALT_INV_result\ [0] $end
$var wire 1 +& \ALT_INV_Equal0~5_combout\ $end
$var wire 1 ,& \ALT_INV_Equal0~4_combout\ $end
$var wire 1 -& ALT_INV_Breg [31] $end
$var wire 1 .& ALT_INV_Breg [30] $end
$var wire 1 /& ALT_INV_Breg [29] $end
$var wire 1 0& ALT_INV_Breg [28] $end
$var wire 1 1& ALT_INV_Breg [27] $end
$var wire 1 2& ALT_INV_Breg [26] $end
$var wire 1 3& ALT_INV_Breg [25] $end
$var wire 1 4& ALT_INV_Breg [24] $end
$var wire 1 5& ALT_INV_Breg [23] $end
$var wire 1 6& ALT_INV_Breg [22] $end
$var wire 1 7& ALT_INV_Breg [21] $end
$var wire 1 8& ALT_INV_Breg [20] $end
$var wire 1 9& ALT_INV_Breg [19] $end
$var wire 1 :& ALT_INV_Breg [18] $end
$var wire 1 ;& ALT_INV_Breg [17] $end
$var wire 1 <& ALT_INV_Breg [16] $end
$var wire 1 =& ALT_INV_Breg [15] $end
$var wire 1 >& ALT_INV_Breg [14] $end
$var wire 1 ?& ALT_INV_Breg [13] $end
$var wire 1 @& ALT_INV_Breg [12] $end
$var wire 1 A& ALT_INV_Breg [11] $end
$var wire 1 B& ALT_INV_Breg [10] $end
$var wire 1 C& ALT_INV_Breg [9] $end
$var wire 1 D& ALT_INV_Breg [8] $end
$var wire 1 E& ALT_INV_Breg [7] $end
$var wire 1 F& ALT_INV_Breg [6] $end
$var wire 1 G& ALT_INV_Breg [5] $end
$var wire 1 H& ALT_INV_Breg [4] $end
$var wire 1 I& ALT_INV_Breg [3] $end
$var wire 1 J& ALT_INV_Breg [2] $end
$var wire 1 K& ALT_INV_Breg [1] $end
$var wire 1 L& ALT_INV_Breg [0] $end
$var wire 1 M& \multiplexer|ALT_INV_F[30]~31_combout\ $end
$var wire 1 N& ALT_INV_Areg [31] $end
$var wire 1 O& ALT_INV_Areg [30] $end
$var wire 1 P& ALT_INV_Areg [29] $end
$var wire 1 Q& ALT_INV_Areg [28] $end
$var wire 1 R& ALT_INV_Areg [27] $end
$var wire 1 S& ALT_INV_Areg [26] $end
$var wire 1 T& ALT_INV_Areg [25] $end
$var wire 1 U& ALT_INV_Areg [24] $end
$var wire 1 V& ALT_INV_Areg [23] $end
$var wire 1 W& ALT_INV_Areg [22] $end
$var wire 1 X& ALT_INV_Areg [21] $end
$var wire 1 Y& ALT_INV_Areg [20] $end
$var wire 1 Z& ALT_INV_Areg [19] $end
$var wire 1 [& ALT_INV_Areg [18] $end
$var wire 1 \& ALT_INV_Areg [17] $end
$var wire 1 ]& ALT_INV_Areg [16] $end
$var wire 1 ^& ALT_INV_Areg [15] $end
$var wire 1 _& ALT_INV_Areg [14] $end
$var wire 1 `& ALT_INV_Areg [13] $end
$var wire 1 a& ALT_INV_Areg [12] $end
$var wire 1 b& ALT_INV_Areg [11] $end
$var wire 1 c& ALT_INV_Areg [10] $end
$var wire 1 d& ALT_INV_Areg [9] $end
$var wire 1 e& ALT_INV_Areg [8] $end
$var wire 1 f& ALT_INV_Areg [7] $end
$var wire 1 g& ALT_INV_Areg [6] $end
$var wire 1 h& ALT_INV_Areg [5] $end
$var wire 1 i& ALT_INV_Areg [4] $end
$var wire 1 j& ALT_INV_Areg [3] $end
$var wire 1 k& ALT_INV_Areg [2] $end
$var wire 1 l& ALT_INV_Areg [1] $end
$var wire 1 m& ALT_INV_Areg [0] $end
$var wire 1 n& \multiplexer|ALT_INV_F[29]~30_combout\ $end
$var wire 1 o& \multiplexer|ALT_INV_F[28]~29_combout\ $end
$var wire 1 p& \multiplexer|ALT_INV_F[27]~28_combout\ $end
$var wire 1 q& \multiplexer|ALT_INV_F[26]~27_combout\ $end
$var wire 1 r& \multiplexer|ALT_INV_F[25]~26_combout\ $end
$var wire 1 s& \multiplexer|ALT_INV_F[24]~25_combout\ $end
$var wire 1 t& \multiplexer|ALT_INV_F[23]~24_combout\ $end
$var wire 1 u& \multiplexer|ALT_INV_F[22]~23_combout\ $end
$var wire 1 v& \multiplexer|ALT_INV_F[21]~22_combout\ $end
$var wire 1 w& \multiplexer|ALT_INV_F[20]~21_combout\ $end
$var wire 1 x& \multiplexer|ALT_INV_F[19]~20_combout\ $end
$var wire 1 y& \multiplexer|ALT_INV_F[18]~19_combout\ $end
$var wire 1 z& \multiplexer|ALT_INV_F[17]~18_combout\ $end
$var wire 1 {& \multiplexer|ALT_INV_F[16]~17_combout\ $end
$var wire 1 |& \multiplexer|ALT_INV_F[15]~16_combout\ $end
$var wire 1 }& \multiplexer|ALT_INV_F[14]~15_combout\ $end
$var wire 1 ~& \multiplexer|ALT_INV_F[13]~14_combout\ $end
$var wire 1 !' \multiplexer|ALT_INV_F[12]~13_combout\ $end
$var wire 1 "' \multiplexer|ALT_INV_F[11]~12_combout\ $end
$var wire 1 #' \multiplexer|ALT_INV_F[10]~11_combout\ $end
$var wire 1 $' \multiplexer|ALT_INV_F[9]~10_combout\ $end
$var wire 1 %' \multiplexer|ALT_INV_F[8]~9_combout\ $end
$var wire 1 &' \multiplexer|ALT_INV_F[7]~8_combout\ $end
$var wire 1 '' \multiplexer|ALT_INV_F[6]~7_combout\ $end
$var wire 1 (' \multiplexer|ALT_INV_F[5]~6_combout\ $end
$var wire 1 )' \multiplexer|ALT_INV_F[4]~5_combout\ $end
$var wire 1 *' \multiplexer|ALT_INV_F[3]~4_combout\ $end
$var wire 1 +' \multiplexer|ALT_INV_F[2]~3_combout\ $end
$var wire 1 ,' \multiplexer|ALT_INV_F[1]~2_combout\ $end
$var wire 1 -' \multiplexer|ALT_INV_F[0]~1_combout\ $end
$var wire 1 .' \ALT_INV_Equal0~2_combout\ $end
$var wire 1 /' \ALT_INV_Equal0~1_combout\ $end
$var wire 1 0' \ALT_INV_Equal0~0_combout\ $end
$var wire 1 1' \multiplexer|ALT_INV_F[31]~0_combout\ $end
$var wire 1 2' \ALT_INV_SelR~q\ $end
$var wire 1 3' \ALT_INV_AddSubR~q\ $end
$var wire 1 4' \ALT_INV_Zreg[15]~DUPLICATE_q\ $end
$var wire 1 5' \ALT_INV_Zreg[3]~DUPLICATE_q\ $end
$var wire 1 6' \ALT_INV_Zreg[2]~DUPLICATE_q\ $end
$var wire 1 7' \ALT_INV_Zreg[0]~DUPLICATE_q\ $end
$var wire 1 8' \ALT_INV_B[30]~input_o\ $end
$var wire 1 9' \ALT_INV_A[18]~input_o\ $end
$var wire 1 :' \ALT_INV_B[15]~input_o\ $end
$var wire 1 ;' \ALT_INV_B[11]~input_o\ $end
$var wire 1 <' \ALT_INV_B[9]~input_o\ $end
$var wire 1 =' \ALT_INV_A[8]~input_o\ $end
$var wire 1 >' \ALT_INV_B[6]~input_o\ $end
$var wire 1 ?' \ALT_INV_A[6]~input_o\ $end
$var wire 1 @' \ALT_INV_B[5]~input_o\ $end
$var wire 1 A' \ALT_INV_B[4]~input_o\ $end
$var wire 1 B' \ALT_INV_A[1]~input_o\ $end
$var wire 1 C' \ALT_INV_B[31]~input_o\ $end
$var wire 1 D' \ALT_INV_AddSub~input_o\ $end
$var wire 1 E' \ALT_INV_Reset~input_o\ $end
$var wire 1 F' \ALT_INV_Equal0~6_combout\ $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0A
0b
0c
0d
0e
0f
0)!
0*!
1+!
x,!
1-!
1.!
1/!
10!
11!
12!
0s!
0t!
0u!
0v!
09"
0:"
0;"
x<"
0="
0>"
0?"
1@"
0A"
0B"
0C"
0D"
0E"
0F"
0G"
0H"
1I"
1J"
1K"
1L"
0M"
1N"
0O"
0P"
0Q"
0R"
1S"
0T"
0U"
0V"
0W"
1X"
0Y"
0Z"
0["
0\"
1]"
1^"
0_"
1`"
1a"
1b"
0c"
0d"
0e"
0f"
0g"
1h"
0i"
0j"
0k"
1l"
0m"
0n"
0o"
0p"
1q"
1r"
0s"
1t"
1u"
1v"
0w"
0x"
0y"
1z"
0{"
0|"
0}"
0~"
1!#
0"#
0##
0$#
1%#
0&#
1'#
1(#
0)#
1*#
0+#
0,#
0-#
1.#
0/#
00#
01#
02#
03#
04#
15#
06#
07#
08#
09#
1:#
0;#
0<#
0=#
1>#
0?#
0@#
0A#
0B#
0C#
1D#
0E#
0F#
0G#
1H#
0I#
0J#
0K#
1L#
0M#
0N#
0O#
1P#
0Q#
0R#
0S#
1T#
0U#
0V#
0W#
1X#
0Y#
0Z#
0[#
1\#
0]#
0^#
0_#
1`#
0a#
0b#
0c#
1d#
0e#
0f#
0g#
1h#
0i#
0j#
0k#
1l#
0m#
0n#
0o#
1p#
0q#
0r#
0s#
0t#
1u#
0v#
0w#
0x#
0y#
1z#
0{#
1|#
1}#
1~#
1!$
1"$
1#$
1$$
0%$
0&$
0+&
0,&
1M&
1n&
1o&
1p&
1q&
1r&
1s&
1t&
1u&
1v&
1w&
1x&
1y&
1z&
1{&
1|&
1}&
1~&
1!'
1"'
1#'
1$'
1%'
1&'
1''
1('
1)'
1*'
1+'
1,'
1-'
0.'
0/'
00'
11'
12'
13'
14'
15'
16'
17'
18'
19'
1:'
1;'
0<'
1='
1>'
1?'
0@'
1A'
0B'
1C'
1D'
1E'
0F'
0!
0"
0#
0$
0%
0&
0'
0(
0)
0*
0+
0,
0-
0.
0/
00
01
02
13
04
05
06
17
08
09
0:
1;
0<
0=
0>
1?
0@
0B
0C
0D
0E
0F
0G
0H
0I
0J
0K
0L
0M
0N
0O
0P
0Q
0R
0S
1T
0U
0V
0W
1X
0Y
0Z
0[
1\
0]
0^
0_
1`
0a
0g
0h
0i
0j
0k
0l
0m
0n
0o
0p
0q
0r
0s
0t
0u
0v
0w
0x
0y
0z
0{
0|
0}
0~
0!!
0"!
0#!
0$!
0%!
0&!
0'!
0(!
03!
04!
05!
06!
07!
08!
09!
0:!
0;!
0<!
0=!
0>!
0?!
0@!
0A!
0B!
0C!
0D!
1E!
0F!
0G!
0H!
1I!
0J!
0K!
0L!
1M!
0N!
0O!
0P!
1Q!
0R!
0S!
0T!
0U!
0V!
0W!
0X!
0Y!
0Z!
0[!
0\!
0]!
0^!
0_!
0`!
0a!
0b!
0c!
0d!
1e!
0f!
0g!
0h!
1i!
0j!
0k!
0l!
1m!
0n!
0o!
0p!
1q!
0r!
0w!
0x!
0y!
0z!
0{!
0|!
0}!
0~!
0!"
0""
0#"
0$"
0%"
0&"
0'"
0("
0)"
0*"
0+"
0,"
0-"
0."
0/"
00"
01"
02"
03"
04"
05"
06"
07"
08"
0'$
0($
0)$
0*$
0+$
0,$
0-$
0.$
0/$
00$
01$
02$
03$
04$
05$
06$
07$
08$
09$
0:$
0;$
0<$
0=$
0>$
0?$
0@$
0A$
0B$
0C$
0D$
0E$
0F$
0G$
0H$
0I$
0J$
0K$
0L$
0M$
0N$
0O$
0P$
0Q$
0R$
0S$
0T$
0U$
0V$
0W$
0X$
0Y$
0Z$
0[$
0\$
0]$
0^$
0_$
0`$
0a$
0b$
0c$
0d$
0e$
0f$
0g$
0h$
0i$
0j$
0k$
0l$
0m$
0n$
0o$
0p$
0q$
0r$
0s$
0t$
0u$
0v$
0w$
0x$
0y$
0z$
0{$
0|$
0}$
0~$
0!%
0"%
0#%
0$%
0%%
0&%
0'%
0(%
0)%
0*%
0+%
0,%
0-%
0.%
0/%
00%
01%
02%
03%
04%
05%
06%
07%
08%
09%
0:%
0;%
0<%
0=%
0>%
0?%
0@%
0A%
0B%
0C%
0D%
0E%
0F%
0G%
0H%
0I%
1J%
1K%
1L%
1M%
1N%
1O%
1P%
1Q%
1R%
1S%
1T%
1U%
1V%
1W%
1X%
1Y%
xZ%
1[%
1\%
1]%
1^%
1_%
1`%
1a%
1b%
1c%
1d%
1e%
xf%
xg%
1h%
1i%
1j%
1k%
1l%
1m%
1n%
1o%
1p%
1q%
1r%
1s%
1t%
1u%
1v%
1w%
1x%
1y%
1z%
1{%
1|%
1}%
1~%
1!&
1"&
1#&
1$&
1%&
1&&
1'&
1(&
1)&
1*&
1-&
1.&
1/&
10&
11&
12&
13&
14&
15&
16&
17&
18&
19&
1:&
1;&
1<&
1=&
1>&
1?&
1@&
1A&
1B&
1C&
1D&
1E&
1F&
1G&
1H&
1I&
1J&
1K&
1L&
1N&
1O&
1P&
1Q&
1R&
1S&
1T&
1U&
1V&
1W&
1X&
1Y&
1Z&
1[&
1\&
1]&
1^&
1_&
1`&
1a&
1b&
1c&
1d&
1e&
1f&
1g&
1h&
1i&
1j&
1k&
1l&
1m&
$end
#5000
1b
1s!
1="
1>"
1B"
1G%
1'%
1#%
1C%
1}$
1?%
1;%
1y$
1%$
0`&
0?&
0C&
0d&
0G&
0h&
0l&
0K&
03'
0I"
1F$
0N"
1D$
0X"
1C$
0]"
1B$
0b"
1@$
0l"
1?$
0q"
1>$
0v"
1<$
0!#
1;$
0%#
1:$
0*#
18$
05#
17$
0:#
16$
0>#
15$
0D#
14$
0H#
13$
0L#
12$
0P#
11$
0T#
10$
0X#
1/$
0\#
1.$
0`#
1-$
0d#
1,$
0h#
1+$
0l#
1*$
0p#
1)$
0u#
1($
0z#
1'$
1M"
1_"
1s"
1)#
0~&
0$'
0('
0,'
0i%
0j%
0k%
0l%
0m%
0n%
0o%
0p%
0q%
0r%
0s%
0t%
0u%
0v%
0w%
0x%
0y%
0z%
0|%
0}%
0~%
0"&
0#&
0$&
0&&
0'&
0(&
0*&
1:"
0'$
0($
0)$
0*$
0+$
0,$
0-$
0.$
0/$
00$
01$
02$
03$
04$
05$
06$
07$
19$
0.#
0:$
0;$
1=$
0z"
0>$
0?$
1A$
0h"
0B$
0C$
1E$
0S"
0F$
0|#
0!$
1/#
16#
1?#
0"$
0~#
0}#
0#$
1I%
0$$
0E$
1S"
0A$
1h"
0=$
1z"
09$
1.#
1*&
0)&
1'&
1&&
0%&
1#&
1"&
0!&
1}%
1|%
0{%
1y%
1x%
1w%
1v%
1u%
1t%
1s%
1r%
1q%
1p%
1o%
1n%
1m%
1l%
1k%
1j%
1i%
1)!
0D$
0@$
0<$
08$
1{%
1!&
1%&
1)&
1.'
1F'
1/'
1+&
1,&
10'
0I%
1$$
1~#
1#$
0?#
1"$
06#
18$
1<$
1@$
1D$
1z%
1~%
1$&
1(&
0#$
0~#
0$$
0(&
0$&
0~%
0z%
0+&
0.'
0/'
1|#
1!$
0/#
1}#
1/'
1.'
1$$
1/#
0}#
0!$
0|#
0F'
0,&
00'
0$$
10'
1,&
1F'
1#$
1~#
0#$
0~#
0/'
0.'
1/'
1.'
1$$
0$$
#10000
0b
1!
1"
1%
1&
1'
1(
1)
1*
1+
1,
1-
1.
1/
10
11
12
14
15
16
18
19
1:
1<
1=
1>
1@
1B
1D
1E
0T
0X
0\
0`
0s!
1R!
1P!
1O!
1N!
1L!
1K!
1J!
1H!
1G!
1F!
1D!
1C!
1B!
1A!
1@!
1?!
1>!
1=!
1<!
1;!
1:!
19!
18!
17!
14!
13!
0q!
0m!
0i!
0e!
1V!
1U!
1S!
1x#
1m#
1k#
0'#
0t"
0`"
0J"
1v#
1s#
1e#
1a#
1]#
1Z#
1U#
1R#
1N#
1J#
1F#
1@#
1;#
17#
12#
1,#
1##
1{"
1w"
1n"
1j"
1e"
1["
1V"
1O"
1D"
0="
0>"
0?'
0='
09'
1@'
1<'
0C'
1y#
0u"
0a"
1A#
1o"
1f"
#15000
1b
1s!
1="
1>"
1(%
0G%
1&%
1P"
1d$
1%%
1$%
0C%
1"%
1`$
1!%
1~$
0?%
1|$
1\$
1{$
1z$
0;%
1x$
1X$
1w$
1v$
1u$
1t$
1s$
1r$
1q$
1p$
1o$
1n$
1m$
1l$
1k$
1,%
1+%
1h$
1g$
1)%
0%$
0-&
0N&
0O&
0/&
00&
0R&
0S&
0T&
0U&
0V&
0W&
0X&
0Y&
0Z&
0[&
0\&
0]&
0^&
0[%
0_&
1?&
0a&
0b&
0_%
0c&
1C&
0e&
0f&
0c%
0g&
1G&
0i&
0j&
06'
0k&
1K&
0m&
1H"
1E$
0S"
1Q"
1W"
1\"
1A$
0h"
1g"
1k"
1p"
1=$
0z"
1x"
1|"
1$#
19$
0.#
1-#
14#
18#
1<#
1B#
1G#
1K#
1O#
1S#
1V#
1[#
1^#
1b#
1f#
1*$
1)$
1t#
1w#
1'$
0i%
01'
0M&
0k%
0l%
0p&
0q&
0r&
0s&
0t&
0u&
0v&
0w&
0x&
0y&
0z&
0{&
0|&
0}&
0{%
0!'
0"'
0#'
0!&
0%'
0&'
0''
0%&
0)'
0*'
0+'
0)&
0-'
0:"
1*"
1."
12"
16"
08$
0<$
0@$
0D$
1F$
1D$
1C$
1B$
1@$
1?$
1>$
1<$
1;$
1:$
18$
17$
16$
15$
14$
13$
12$
11$
10$
1/$
1.$
1-$
1,$
1+$
1($
0'$
1(&
1$&
1~%
1z%
0)!
1&!
1"!
1|
1x
1i%
0j%
0m%
0n%
0o%
0p%
0q%
0r%
0s%
0t%
0u%
0v%
0w%
0x%
0y%
0z%
0|%
0}%
0~%
0"&
0#&
0$&
0&&
0'&
0(&
0*&
0/#
1/#
16#
1?#
0"$
1I%
1+&
#20000
0b
0!
0"
0)
0*
0+
0,
01
02
04
09
0:
0<
0B
0D
0E
1X
1`
1A
03
0;
1F
1G
1H
1I
1N
1O
1P
1Q
1V
1W
1Y
1^
1_
1a
0s!
0N!
0M!
0L!
0K!
0F!
0E!
0D!
0C!
0>!
0=!
0<!
0;!
04!
03!
1r!
1q!
1p!
1o!
1j!
1i!
1h!
1g!
1b!
1a!
1`!
1_!
1Z!
1Y!
1X!
1W!
0V!
0U!
0S!
1v!
1?"
0x#
0m#
0k#
1g#
1c#
1_#
1Y#
1E#
1C#
1=#
19#
1}"
1y"
1t"
1m"
1T"
1R"
1J"
1C"
0v#
0s#
0U#
0R#
0N#
0J#
02#
0,#
0(#
0##
0j"
0e"
0^"
0["
0="
0>"
1?'
0<'
0;'
1C'
0D'
0@"
0y#
1~"
1u"
0f"
#25000
1b
1s!
1="
1>"
0B"
1H%
1E"
1f$
1G%
1e$
1F%
1E%
1U"
1c$
0$%
1b$
0#%
1a$
0"%
0!%
1_$
1@%
1^$
1?%
1]$
1>%
1=%
1[$
1Z$
0z$
1&#
0y$
1Y$
0x$
0w$
13#
1W$
18%
1V$
17%
1U$
16%
1T$
15%
1S$
0r$
1R$
0q$
1Q$
0p$
1P$
0o$
1O$
10%
1N$
1/%
1M$
1.%
1L$
1-%
1K$
0,%
1J$
0+%
1I$
0h$
1H$
0g$
0)%
1{#
1-&
1N&
0K%
1O&
0L%
1/&
0M%
10&
0N%
01&
0O%
02&
0P%
03&
0Q%
04&
0R%
1V&
0S%
1W&
0T%
1X&
0U%
1Y&
0V%
09&
0W%
0:&
0X%
0;&
0Y%
0<&
04'
1^&
1_&
0\%
1`&
1a&
0]%
0^%
0A&
0B&
0`%
0C&
0a%
0D&
0b%
1f&
1g&
0d%
1h&
0e%
1i&
05'
0I&
0J&
0h%
0K&
07'
0L&
13'
1I"
0B$
1b"
0A$
1h"
0@$
1l"
0?$
1q"
0:$
1*#
09$
1.#
08$
15#
07$
1:#
02$
1P#
01$
1T#
00$
1X#
0/$
1\#
0($
1z#
0\"
0_"
0g"
0k"
0$#
0)#
0-#
04#
0K#
0O#
0S#
0V#
0t#
0w#
11'
1M&
1t&
1u&
1v&
1w&
1|&
1}&
1~&
1!'
1&'
1''
1('
1)'
1j%
1q%
1r%
1s%
1t%
1y%
1z%
1{%
1|%
1#&
1$&
1%&
1&&
19"
1x!
1y!
1z!
1{!
1|!
1}!
1~!
1!"
1""
1#"
1$"
1%"
1&"
1'"
1("
1)"
1+"
1,"
1-"
1/"
10"
11"
13"
14"
15"
17"
18"
1'$
0.$
1`#
1/$
10$
11$
06$
1>#
17$
18$
19$
0>$
1v"
1?$
1@$
1A$
0F$
1N"
0/#
06#
1B$
0b"
0A$
0@$
0?$
1:$
0*#
09$
08$
07$
12$
0P#
01$
00$
0/$
1($
0z#
0'$
0I%
1*&
0%&
0$&
0#&
1"&
0{%
0z%
0y%
1x%
0s%
0r%
0q%
1p%
0i%
1d
1(!
1'!
1%!
1$!
1#!
1!!
1~
1}
1{
1z
1y
1w
1v
1u
1t
1s
1r
1q
1p
1o
1n
1m
1l
1k
1j
1i
1h
0E$
1S"
0=$
1z"
05$
1D#
0-$
1d#
1i%
0j%
1q%
1r%
1s%
0t%
1y%
1z%
1{%
0|%
1#&
1$&
1%&
0&&
16#
1/#
1'$
11$
0T#
19$
0.#
1A$
0h"
1o%
1w%
1!&
1)&
0/#
06#
0,$
1h#
04$
1H#
0<$
1!#
0D$
1X"
0%&
0{%
0s%
0i%
0?#
1@$
0l"
18$
05#
10$
0X#
1(&
1~%
1v%
1n%
0C$
1]"
0;$
1%#
03$
1L#
0+$
1l#
0r%
0z%
0$&
1"$
1/$
0\#
17$
0:#
1?$
0q"
1m%
1u%
1}%
1'&
1/#
0*$
1p#
02$
1P#
0:$
1*#
0B$
1b"
0#&
0y%
0q%
0+&
1>$
0v"
16$
0>#
1.$
0`#
1&&
1|%
1t%
1l%
16#
0A$
1h"
09$
1.#
01$
1T#
0)$
1u#
0p%
0x%
0"&
1-$
0d#
15$
0D#
1=$
0z"
1k%
1s%
1{%
1%&
0($
1z#
00$
1X#
08$
15#
0@$
1l"
0!&
0w%
0o%
1|#
1<$
0!#
14$
0H#
1,$
0h#
1$&
1z%
1r%
1j%
1?#
0"$
0?$
1q"
07$
1:#
0/$
1\#
0'$
0n%
0v%
0~%
00'
0/#
1+$
0l#
13$
0L#
1;$
0%#
1i%
1q%
1y%
1#&
1+&
0.$
1`#
06$
1>#
0>$
1v"
0}%
0u%
0m%
06#
1:$
0*#
12$
0P#
1*$
0p#
1"&
1x%
1p%
0=$
1z"
05$
1D#
0-$
1d#
0l%
0t%
0|%
1)$
0u#
11$
0T#
19$
0.#
1o%
1w%
1!&
0,$
1h#
04$
1H#
0<$
1!#
0{%
0s%
0k%
0?#
18$
05#
10$
0X#
1($
0z#
1~%
1v%
1n%
0;$
1%#
03$
1L#
0+$
1l#
0j%
0r%
0z%
1"$
1'$
1/$
0\#
17$
0:#
1m%
1u%
1}%
1/#
0*$
1p#
02$
1P#
0:$
1*#
0y%
0q%
0i%
0+&
1!$
16$
0>#
1.$
0`#
1|%
1t%
1l%
16#
09$
1.#
01$
1T#
0)$
1u#
0p%
0x%
0,&
1-$
0d#
15$
0D#
1k%
1s%
1{%
0($
1z#
00$
1X#
08$
15#
0w%
0o%
1#$
14$
0H#
1,$
0h#
1z%
1r%
1j%
1?#
0"$
07$
1:#
0/$
1\#
0'$
0n%
0v%
0.'
0/#
1+$
0l#
13$
0L#
1i%
1q%
1y%
1+&
0.$
1`#
06$
1>#
0u%
0m%
0#$
06#
12$
0P#
1*$
0p#
1x%
1p%
05$
1D#
0-$
1d#
0l%
0t%
1.'
1)$
0u#
11$
0T#
1o%
1w%
0,$
1h#
04$
1H#
0s%
0k%
0?#
10$
0X#
1($
0z#
1v%
1n%
03$
1L#
0+$
1l#
0j%
0r%
1}#
1"$
1'$
1/$
0\#
1m%
1u%
0*$
1p#
02$
1P#
0q%
0i%
0+&
0F'
1.$
0`#
1t%
1l%
01$
1T#
0)$
1u#
0p%
1-$
0d#
1k%
1s%
0($
1z#
00$
1X#
0o%
1#$
1,$
0h#
1r%
1j%
0/$
1\#
0'$
0n%
0.'
1+$
0l#
1i%
1q%
0}#
0.$
1`#
0m%
1*$
0p#
1p%
1F'
0#$
0-$
1d#
0l%
1)$
0u#
1o%
1.'
0,$
1h#
0k%
1($
0z#
1n%
0+$
1l#
0j%
1}#
1'$
1m%
0*$
1p#
0i%
0F'
1#$
1l%
1~#
0)$
1u#
0.'
1k%
0/'
0($
1z#
1j%
0'$
1i%
1$$
#30000
0b
1B
1D
1E
0X
0`
0A
0F
0G
0H
0I
0N
0O
0P
0Q
0V
0W
0Y
0^
0_
0a
0%
0&
0'
0(
0-
0.
0/
00
05
06
08
0=
0>
0@
1f
07
0?
1C
0s!
0r!
0q!
0p!
0o!
0j!
0i!
0h!
0g!
0b!
0a!
0`!
0_!
0Z!
0Y!
0X!
0W!
1V!
1U!
1T!
1S!
0v!
0R!
0Q!
0P!
0O!
0J!
0I!
0H!
0G!
0B!
0A!
0@!
0?!
0:!
09!
08!
07!
1u!
1F"
0e#
0a#
0]#
0Z#
0F#
0@#
0;#
07#
0{"
0w"
0r"
0n"
0V"
0O"
0K"
0D"
0?"
1x#
1q#
1m#
1k#
0g#
0c#
0_#
0Y#
0E#
0C#
0=#
09#
0}"
0y"
0t"
0m"
0T"
0R"
0J"
0C"
0="
0>"
1<'
1;'
08'
0C'
1D'
1B'
1='
19'
0A#
0o"
0L"
1@"
1y#
1r#
0~"
0u"
#35000
1b
1s!
1="
1>"
1B"
0H%
0(%
0E"
1G"
0f$
0G%
0'%
0e$
0&%
0P"
0F%
0d$
0E%
0U"
0%%
0c$
0b$
0a$
0`$
0_$
0@%
0~$
0^$
0}$
0?%
0]$
0|$
0>%
0\$
0{$
0=%
0[$
0Z$
0&#
0Y$
0X$
03#
0W$
0v$
08%
0V$
0u$
07%
0U$
0t$
06%
0T$
05%
0s$
0S$
0R$
0Q$
0P$
0O$
00%
0n$
0N$
0m$
0/%
0M$
0l$
0.%
0L$
0k$
0-%
0K$
1,%
0J$
1+%
0I$
1*%
0H$
1)%
0{#
1%$
0-&
1K%
0.&
1L%
0/&
1M%
00&
1N%
11&
1R&
1O%
12&
1S&
1P%
13&
1T&
1Q%
1U&
14&
1R%
1S%
1T%
1U%
1V%
1Z&
19&
1W%
1:&
1[&
1X%
1;&
1\&
1Y%
1<&
1]&
14'
1[%
1\%
1]%
1^%
1A&
1b&
1_%
1B&
1c&
1`%
1C&
1d&
1a%
1e&
1D&
1b%
1c%
1d%
1e%
1j&
15'
1I&
1J&
16'
1k&
1h%
1l&
1K&
02'
17'
1m&
1L&
03'
0I"
1B$
0b"
1A$
0h"
1@$
0l"
1?$
0q"
1:$
0*#
19$
0.#
18$
05#
17$
0:#
12$
0P#
11$
0T#
10$
0X#
1/$
0\#
0H"
0M"
0Q"
0W"
0p"
0s"
0x"
0|"
08#
0<#
0B#
0G#
0[#
0^#
0b#
0f#
1p&
1q&
1r&
1s&
1x&
1y&
1z&
1{&
1"'
1#'
1$'
1%'
1*'
1+'
1,'
1-'
0q%
0r%
0s%
0t%
0y%
0z%
0{%
0|%
0#&
0$&
0%&
0&&
1:"
09"
0x!
0y!
0z!
0{!
0|!
0}!
0~!
0!"
0""
0#"
0$"
0%"
0&"
0'"
0("
0)"
0*"
0+"
0,"
0-"
0."
0/"
00"
01"
02"
03"
04"
05"
06"
07"
08"
1.$
0`#
0/$
00$
01$
16$
0>#
07$
08$
09$
1>$
0v"
0?$
0@$
0A$
1F$
0N"
0|#
0!$
1/#
16#
0}#
0#$
0~#
0F$
1E$
0S"
1D$
0X"
1C$
0]"
0>$
1=$
0z"
1<$
0!#
1;$
0%#
06$
15$
0D#
14$
0H#
13$
0L#
0.$
1-$
0d#
1,$
0h#
1+$
0l#
0*&
1%&
1$&
1#&
0"&
1{%
1z%
1y%
0x%
1s%
1r%
1q%
0p%
1)!
0d
0(!
0'!
0&!
0%!
0$!
0#!
0"!
0!!
0~
0}
0|
0{
0z
0y
0x
0w
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
0l
0k
0j
0i
0h
0E$
0=$
05$
0-$
0m%
0n%
0o%
1p%
0u%
0v%
0w%
1x%
0}%
0~%
0!&
1"&
0'&
0(&
0)&
1*&
1/'
1.'
1F'
1,&
10'
06#
0/#
1*$
0p#
0+$
0,$
02$
03$
04$
0:$
0;$
0<$
0B$
0C$
0D$
1o%
1w%
1!&
1)&
0$$
1?#
0"$
1(&
1'&
1&&
1~%
1}%
1|%
1v%
1u%
1t%
1n%
1m%
0l%
0?#
1)$
0u#
1+&
1"$
1}#
1!$
1|#
0k%
1($
0z#
00'
0,&
0F'
0+&
0j%
1#$
1~#
1'$
0i%
0/'
0.'
#40000
0b
0B
0D
0E
1`
1A
1^
1_
1a
0C
0s!
1r!
1q!
1p!
1o!
0V!
0U!
0T!
0S!
1v!
1?"
0x#
0q#
0m#
0k#
1T"
1R"
1J"
1C"
0="
0>"
18'
1C'
0D'
0@"
0y#
0r#
#45000
1b
1s!
1="
1>"
0B"
1H%
1G%
1F%
1E%
0,%
1J$
0+%
1I$
0*%
1H$
0)%
1G$
0%$
1&$
0J%
1-&
0K%
1.&
0L%
1/&
0M%
10&
0I&
0J&
0K&
0L&
13'
1I"
1B$
1A$
1@$
1?$
1>$
1=$
1<$
1;$
1:$
19$
18$
17$
16$
15$
14$
13$
12$
11$
10$
1/$
1.$
1-$
1,$
1+$
1j#
1o#
1t#
1w#
01'
0M&
0n&
0o&
0m%
0n%
0o%
0p%
0q%
0r%
0s%
0t%
0u%
0v%
0w%
0x%
0y%
0z%
0{%
0|%
0}%
0~%
0!&
0"&
0#&
0$&
0%&
0&&
1;"
0:"
1w!
1x!
1y!
1z!
1F$
0|#
0!$
1/#
16#
1?#
0"$
0~#
0}#
0#$
0*$
1p#
0)$
1u#
0($
1z#
0'$
0*&
1c
0)!
1j
1i
1h
1g
1i%
1j%
1k%
1l%
1.'
1F'
1/'
1+&
1,&
10'
1'$
1($
1)$
1I%
0k%
0j%
0i%
0I%
#50000
0b
0`
0A
0^
0_
0a
0f
0s!
0r!
0q!
0p!
0o!
0v!
0u!
0F"
0?"
0T"
0R"
0J"
0C"
0="
0>"
1D'
1@"
#55000
1b
1s!
1="
1>"
1B"
0H%
1E"
0G"
1f$
0G%
0F%
0E%
1b$
1a$
1`$
1_$
1^$
1]$
1\$
1[$
1Z$
1&#
1Y$
1X$
13#
1W$
1V$
1U$
1T$
1S$
1R$
1Q$
1P$
1O$
1N$
1M$
1L$
1K$
0J$
1M%
0N%
0O%
0P%
0Q%
0R%
0S%
0T%
0U%
0V%
0W%
0X%
0Y%
04'
0[%
0\%
0]%
0^%
0_%
0`%
0a%
0b%
0c%
0d%
0e%
1I&
1J&
1K&
12'
07'
1L&
03'
0I"
0B$
0A$
0@$
0?$
0>$
0=$
0<$
0;$
0:$
09$
08$
07$
06$
05$
04$
03$
02$
01$
00$
0/$
0.$
0-$
0,$
0+$
1*$
0p#
0)$
0($
0'$
0o#
0t#
0w#
0j#
1o&
11'
1M&
1n&
1i%
1j%
1k%
0l%
1m%
1n%
1o%
1p%
1q%
1r%
1s%
1t%
1u%
1v%
1w%
1x%
1y%
1z%
1{%
1|%
1}%
1~%
1!&
1"&
1#&
1$&
1%&
1&&
0z!
1{!
1|!
1}!
1~!
1!"
1""
1#"
1$"
1%"
1&"
1'"
1("
1)"
1*"
1+"
1,"
1-"
1."
1/"
10"
11"
12"
13"
14"
18"
1)$
0u#
0F$
1!$
0/#
06#
0?#
1"$
1}#
0)$
1($
0z#
1'$
0*$
1*&
0k%
1(!
1$!
1#!
1"!
1!!
1~
1}
1|
1{
1z
1y
1x
1w
1v
1u
1t
1s
1r
1q
1p
1o
1n
1m
1l
1k
0j
0($
1l%
0i%
0j%
1k%
0F'
0+&
0,&
1|#
0'$
1j%
1#$
1I%
1i%
00'
0.'
1~#
0I%
0/'
1$$
#60000
0b
0s!
0="
0>"
#65000
1b
1s!
1="
1>"
0E"
0f$
0b$
0a$
0`$
0_$
0^$
0]$
0\$
0[$
0Z$
0&#
0Y$
0X$
03#
0W$
0V$
0U$
0T$
0S$
0R$
0Q$
0P$
0O$
0N$
0M$
0L$
0K$
0I$
0H$
0G$
1%$
0&$
1J%
1K%
1L%
1N%
1O%
1P%
1Q%
1R%
1S%
1T%
1U%
1V%
1W%
1X%
1Y%
14'
1[%
1\%
1]%
1^%
1_%
1`%
1a%
1b%
1c%
1d%
1e%
17'
0;"
1:"
0w!
0x!
0y!
0{!
0|!
0}!
0~!
0!"
0""
0#"
0$"
0%"
0&"
0'"
0("
0)"
0*"
0+"
0,"
0-"
0."
0/"
00"
01"
02"
03"
04"
08"
0c
1)!
0(!
0$!
0#!
0"!
0!!
0~
0}
0|
0{
0z
0y
0x
0w
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
0l
0k
0i
0h
0g
#70000
